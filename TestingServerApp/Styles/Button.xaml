<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <!--STYLE FOR BUTTON'S INNER BORDER-->
    <Style TargetType="{x:Type Border}" x:Key="Style_ButtonsInnerBorderBase">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Main30Color_light}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Accent10Color4_light}"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="3" Opacity="0.3"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--STYLE FOR BUTTON'S INNER BORDER 2-->
    <Style TargetType="{x:Type Border}" x:Key="Style_AddRemoveAnswerButtonsInnerBorder">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Opacity" Value="0.5"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="9" Opacity="0.9" ShadowDepth="0" Color="#252C4A"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <!--BASE BUTTON-->
    <Style TargetType="{x:Type Button}" x:Key="Style_MenuButtonBase">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="5 5 0 0"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{DynamicResource Accent10Color2_light}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" Style="{DynamicResource Style_ButtonsInnerBorderBase}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30*"/>
                                <ColumnDefinition Width="70*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" Grid.Column="0"/>
                            <TextBlock Text="{TemplateBinding Tag}" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="1"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="8" Opacity="0.9" ShadowDepth="0" Color="#107EEB"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <!--BASE BUTTON DISABLED-->
    <Style TargetType="{x:Type Button}" x:Key="Style_MenuButtonBase_Disabled" BasedOn="{StaticResource Style_MenuButtonBase}">
        <!-- Disable button when no item in datagrid is selected -->
        <Style.Triggers>
            <DataTrigger Binding ="{Binding ElementName=DataGrid, Path=SelectedIndex}" Value="-1">
                <Setter Property="IsEnabled" Value="False"></Setter>
                <Setter Property="Background" Value="{DynamicResource Main60Color}"/>
                <Setter Property="FontWeight" Value="Normal"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>



    <!--ADD MAIN BUTTON-->
    <Style TargetType="{x:Type Button}" x:Key="Style_AddButton" BasedOn="{StaticResource Style_MenuButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" Style="{DynamicResource Style_ButtonsInnerBorderBase}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40*"/>
                                <ColumnDefinition Width="50*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding Content}" Grid.Column="1"/>
                            <Image Height="15" Width="15" Source="\Images\AddButton.png" Grid.Column="0"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--DELETE MAIN BUTTON-->
    <Style TargetType="{x:Type Button}" x:Key="Style_DeleteButton" BasedOn="{StaticResource Style_AddButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" Style="{DynamicResource Style_ButtonsInnerBorderBase}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40*"/>
                                <ColumnDefinition Width="50*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding Content}" Grid.Column="1"/>
                            <Image Height="15" Width="15" Source="\Images\DeleteButton.png" Grid.Column="0"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Disable button when no item in datagrid is selected -->
        <Style.Triggers>
            <DataTrigger Binding ="{Binding ElementName=DataGrid, Path=SelectedIndex}" Value="-1">
                <Setter Property="IsEnabled" Value="False"></Setter>
                <Setter Property="Background" Value="{DynamicResource Main60Color}"/>
                <Setter Property="FontWeight" Value="Normal"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>



    <!--DELETE AXILIARY BUTTON-->
    <Style TargetType="{x:Type Button}" x:Key="Style_DeleteButton2" BasedOn="{StaticResource Style_DeleteButton}">
        <!-- Disable button when no item in datagrid is selected -->
        <Style.Triggers>
            <DataTrigger Binding ="{Binding ElementName=DataGrid2, Path=SelectedIndex}" Value="-1">
                <Setter Property="IsEnabled" Value="False"></Setter>
                <Setter Property="Background" Value="{DynamicResource Main60Color}"/>
                <Setter Property="FontWeight" Value="Normal"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>



    <!--EDIT MAIN BUTTON-->
    <Style TargetType="{x:Type Button}" x:Key="Style_EditButton" BasedOn="{StaticResource Style_AddButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" Style="{DynamicResource Style_ButtonsInnerBorderBase}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40*"/>
                                <ColumnDefinition Width="50*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding Content}" Grid.Column="1"/>
                            <Image Height="15" Width="15" Source="\Images\EditButton.png" Grid.Column="0"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Disable button when no item in datagrid is selected -->
        <Style.Triggers>
            <DataTrigger Binding ="{Binding ElementName=DataGrid, Path=SelectedIndex}" Value="-1">
                <Setter Property="IsEnabled" Value="False"></Setter>
                <Setter Property="Background" Value="{DynamicResource Main60Color}"/>
                <Setter Property="FontWeight" Value="Normal"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>



    <!--EDIT AXILIARY BUTTON-->
    <Style TargetType="{x:Type Button}" x:Key="Style_EditButton2" BasedOn="{StaticResource Style_EditButton}">
        <!-- Disable button when no item in datagrid is selected -->
        <Style.Triggers>
            <DataTrigger Binding ="{Binding ElementName=DataGrid2, Path=SelectedIndex}" Value="-1">
                <Setter Property="IsEnabled" Value="False"></Setter>
                <Setter Property="Background" Value="{DynamicResource Main60Color}"/>
                <Setter Property="FontWeight" Value="Normal"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>



    <!--EXIT BUTTON-->
    <Style TargetType="{x:Type Button}" x:Key="Style_ExitButton2" BasedOn="{StaticResource Style_MenuButtonBase}">
        <Setter Property="Margin" Value="5 5 5 5"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <!-- prevent button color change on mouseover -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- background image -->
        <Setter Property="Content">
            <Setter.Value>
                <Image Source="\Images\CloseButtonImage.png"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Content">
                    <Setter.Value>
                        <Image Source="\Images\CloseButtonImageMouseOver.png"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--ADD ANSWER BUTTON-->
    <Style TargetType="{x:Type Button}" x:Key="Style_RoundAnswerButton">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="5 5 5 5"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="50" Style="{DynamicResource Style_AddRemoveAnswerButtonsInnerBorder}">
                        <ContentPresenter Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--EXIT BUTTON-->
    <Style TargetType="{x:Type Button}" x:Key="Style_ExitButton" BasedOn="{StaticResource Style_RoundAnswerButton}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="50" Style="{DynamicResource Style_AddRemoveAnswerButtonsInnerBorder}">
                        <Image Width="25">
                            <Image.Source>
                                <BitmapImage DecodePixelWidth="25" UriSource="\Images\Delete3_100.png"/>
                            </Image.Source>
                        </Image>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>