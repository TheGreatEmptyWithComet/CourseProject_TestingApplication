<Page x:Class="TestingServerApp.Viewes.TestDataPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:TestingServerApp.Viewes"
      mc:Ignorable="d"
      DataContext="{StaticResource baseVM}"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="TestDataPage">

    <DockPanel>
        <!-- Header & exit button -->
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <!-- Page info header -->
            <TextBlock Text="Tests" Style="{DynamicResource Style_WindowTextBlock}" Grid.Column="0" Margin="5 5 0 0"/>
            <!-- Exit button -->
            <Button Command="{Binding TestMaterialsVM.ExitTestWithoutSavingCommand}" Grid.Column="1" Style="{DynamicResource Style_ExitButton}" />
        </Grid>

        <!-- Command buttons -->
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
            <!-- Save and exit button -->
            <Button Content="Save and exit" Command="{Binding TestMaterialsVM.SaveTestEndExitCommand}" Style="{DynamicResource Style_MenuButtonBase}" />

            <!-- Questions button -->
            <Button Content="Questions" Command="{Binding TestMaterialsVM.GoToQuestionsCommand}" Style="{DynamicResource Style_MenuVisibleOnSelectionButton}" />

        </StackPanel>

        <!-- test data -->
        <StackPanel Margin="5">
            <!-- Category -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30*"/>
                    <ColumnDefinition Width="70*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Category:" Style="{DynamicResource Style_WindowTextBlock}" Grid.Column="0"/>
                <ComboBox ItemsSource="{Binding TestCategoriesVM.TestCategories}" SelectedItem="{Binding TestMaterialsVM.CurrentTest.TestCategory}" Grid.Column="1" Style="{DynamicResource Style_ComboBoxBase}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>

            <!-- Test name -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30*"/>
                    <ColumnDefinition Width="70*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Name:" Style="{DynamicResource Style_WindowTextBlock}" Grid.Column="0"/>
                <TextBox Text="{Binding TestMaterialsVM.CurrentTest.Name }" Style="{DynamicResource Style_WindowTextBox}" Grid.Column="1"/>
            </Grid>

            <!-- Amount of questions for test -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30*"/>
                    <ColumnDefinition Width="70*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Amount of questions for test:" Style="{DynamicResource Style_WindowTextBlock}" Grid.Column="0"/>
                <TextBox Text="{Binding TestMaterialsVM.CurrentTest.QuestionsAmountForTest }" Style="{DynamicResource Style_WindowTextBox}" Grid.Column="1"/>
            </Grid>

            <!-- Minutes for test -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30*"/>
                    <ColumnDefinition Width="70*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Minutes for test:" Style="{DynamicResource Style_WindowTextBlock}" Grid.Column="0"/>
                <TextBox Text="{Binding TestMaterialsVM.CurrentTest.MinutsForTest }" Style="{DynamicResource Style_WindowTextBox}" Grid.Column="1"/>
            </Grid>

            <!-- Scores for test -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30*"/>
                    <ColumnDefinition Width="70*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Scores for test:" Style="{DynamicResource Style_WindowTextBlock}" Grid.Column="0"/>
                <TextBox Text="{Binding TestMaterialsVM.CurrentTest.MaxTestScores }" Style="{DynamicResource Style_WindowTextBox}" Grid.Column="1"/>
            </Grid>

            <!-- Test image -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30*"/>
                    <ColumnDefinition Width="70*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Test image:" Style="{DynamicResource Style_WindowTextBlock}" Grid.Column="0"/>
                <StackPanel Orientation="Horizontal" Grid.Column="1">
                    <!-- Image -->
                    <Border CornerRadius="10" Height="200" Width="200" Margin="0 0 10 10">
                        <Border.Background>
                            <ImageBrush ImageSource="{Binding TestMaterialsVM.CurrentTest.ImagePath}" TileMode="FlipY" />
                        </Border.Background>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TestMaterialsVM.CurrentTest.ImagePath}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>

                    <!-- Load/Delete buttons -->
                    <StackPanel Orientation="Vertical">
                        <Button Content="Load image" Command="{Binding TestMaterialsVM.LoadImageCommand}" Style="{DynamicResource Style_MenuButtonBase}" ToolTip="Max image size = 1 Mb" Margin="0 0 5 5"/>
                        <Button Content="Delete image" Command="{Binding TestMaterialsVM.DeleteImageCommand}" Margin="0 5 5 5">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Style_MenuButtonBase}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding TestMaterialsVM.CurrentTest.ImagePath}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>

                </StackPanel>
            </Grid>
            
            <!-- Error message -->
            <TextBlock Text="{Binding TestMaterialsVM.ErrorMessage}" Style="{DynamicResource Style_PageErrorMessageTextBlock}"/>
        </StackPanel>

    </DockPanel>
</Page>
